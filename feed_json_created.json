{"version": "https://jsonfeed.org/version/1", "title": "JoshooaJ", "home_page_url": "https://www.joshooaj.com/", "feed_url": "https://www.joshooaj.com/feed_json_created.json", "description": "The personal blog of Josh Hendricks.", "icon": "https://www.joshooaj.com/assets/images/joshooaj.png", "authors": [], "language": "en", "items": [{"id": "https://www.joshooaj.com/blog/2025/09/18/the-collapse-of-freedom-of-speech-in-real-time/", "url": "https://www.joshooaj.com/blog/2025/09/18/the-collapse-of-freedom-of-speech-in-real-time/", "title": "The Collapse of Freedom of Speech in Real-Time", "content_html": "<h1>The Collapse of Freedom of Speech in Real-Time</h1>\n<p><img alt=\"Jimmy Kimmel Live!\" src=\"./jimmy-kimmel-live.png\"></p>\n<p>Say what you will about Charlie Kirk <em>(at your own risk)</em>, but prior to his heinous murder the man\nenjoyed his 1st amendment rights to freedom of speech and believed in the free exchange of ideas.\nHe encouraged and promoted public debates with prominent voices on the left. Now, the political\nright are callously using his gruesome assassination to silence MAGA critics.</p>", "image": "https://www.joshooaj.com/assets/images/social/blog/posts/2025-09-18-The-Collapse-of-Freedom-of-Speech-in-Real-Time/index.png", "date_published": "2025-09-18T00:00:00+00:00", "authors": [{"name": "Josh Hendricks"}], "tags": ["Politics"]}, {"id": "https://www.joshooaj.com/blog/2025/02/27/got-the-time/", "url": "https://www.joshooaj.com/blog/2025/02/27/got-the-time/", "title": "Got the time?", "content_html": "<h1>Got the time?</h1>\n<p><img alt=\"Photo of the time circuit from Back to the Future\" src=\"bttf.png\"></p>\n<p>Every few years I end up having to mess with the time. Not like, the linear flow or the speed at which we perceive\nit. As cool as <em>that</em> would be, I'm usually just messing with mundane Windows time settings. When you're working with\nphysical security systems, maintaining accurate time across all servers and devices is kind of important. And it's\ncommon for surveillance and access control networks to be isolated from the Internet, so not only do you need a time\nsource, but you need to <em>distribute</em> the time. Fortunately, Windows has a built-in time server - you just have to know\nhow to turn it on!</p>", "image": "https://www.joshooaj.com/assets/images/social/blog/posts/2025-02-27-Got-the-time/index.png", "date_published": "2025-02-27T00:00:00+00:00", "authors": [{"name": "Josh Hendricks"}], "tags": ["PowerShell"]}, {"id": "https://www.joshooaj.com/blog/2025/02/19/restreaming-rtsp-with-ffmpeg-and-mediamtx/", "url": "https://www.joshooaj.com/blog/2025/02/19/restreaming-rtsp-with-ffmpeg-and-mediamtx/", "title": "Restreaming RTSP with FFmpeg and MediaMTX", "content_html": "<h1>Restreaming RTSP with FFmpeg and MediaMTX</h1>\n<p><img alt=\"ffmpeg logo\" src=\"ffmpeg-logo.svg\">{ width=\"400\" }</p>\n<p>If you've ever messed with IP cameras and RTSP video feeds, you might have run into a situation where VLC can access\nthe stream without a problem, but the system meant to record that stream can't seem to do it. There's nothing more\npermanent than a temporary fix, so in this post I'll show you (and my future self) how to work around the issue.</p>", "image": "https://www.joshooaj.com/assets/images/social/blog/posts/2025-02-14-Restreaming-RTSP-with-ffmpeg-and-mediamtx/index.png", "date_published": "2025-02-19T00:00:00+00:00", "authors": [{"name": "Josh Hendricks"}], "tags": ["XProtect", "ffmpeg"]}, {"id": "https://www.joshooaj.com/blog/2024/12/30/why-i-never-learned-bash/", "url": "https://www.joshooaj.com/blog/2024/12/30/why-i-never-learned-bash/", "title": "Why I never learned Bash", "content_html": "<h1>Why I never learned Bash</h1>\n<p>I\u2019ve been using a computer since ~1996 (age 12/13). I\u2019ve built many PCs, and installed various Windows and Linux operating systems many hundreds of times over the past 28 years. I played L.O.R.D. on my dads BBS, played DOS games like Wolfenstein 3D, Descent, and Duke Nukem. So far in my IT career I\u2019ve worked as a system administrator, software vendor support, and as software developer. It may surprise you to hear then that I learned my first shell language just 5 years ago, in 2019.</p>", "image": "https://www.joshooaj.com/assets/images/social/blog/posts/2024-12-20-Why-PowerShell-is-my-only-shell/index.png", "date_published": "2024-12-30T00:00:00+00:00", "authors": [{"name": "Josh Hendricks"}], "tags": ["PowerShell"]}, {"id": "https://www.joshooaj.com/blog/2024/08/02/nerdbankgitversioning-and-the-revision-number/", "url": "https://www.joshooaj.com/blog/2024/08/02/nerdbankgitversioning-and-the-revision-number/", "title": "Nerdbank.GitVersioning and the Revision number", "content_html": "<h1>Nerdbank.GitVersioning and the Revision number</h1>\n<p><img alt=\"Screenshot of various versions returned by the command &quot;nbgv get-version&quot;\" src=\"2024-08-02-nbgv-revision-wut.png\"></p>\n<p>I love using the NerdBank.GitVersioning CLI tool <code>nbgv</code>. It completely removes the need to think about an aspect of a\nproject that doesn't add any value to your customers. But today I realized I understood the first three parts of the\nversion produced by <code>nbgv</code>, but the fourth \"revision\" component was not obvious. Turns out it is a uint16 value of the\nfirst two bytes of the commit id!</p>", "image": "https://www.joshooaj.com/assets/images/social/blog/posts/2024-08-02-nbgv/index.png", "date_published": "2024-08-02T00:00:00+00:00", "authors": [{"name": "Josh Hendricks"}], "tags": [".NET", "GitVersioning"]}, {"id": "https://www.joshooaj.com/blog/2024/05/12/serving-a-web-api-with-pode/", "url": "https://www.joshooaj.com/blog/2024/05/12/serving-a-web-api-with-pode/", "title": "Serving a web api with Pode", "content_html": "<h1>Serving a web api with Pode</h1>\n<p><img alt=\"Screenshot of this blog's footer with the now-playing text &quot;When I Come Around&quot; by Green Day\" src=\"2024-05-03-Pode-Now-Playing.png\"></p>\n<p>I added a subtle \"Now playing\" text to the footer of this site which represents the first result in the response from\nthe <a href=\"https://www.last.fm/api/show/user.getRecentTracks\">user.getRecentTracks</a> method on the Last.FM API. The data is\nupdated every few seconds with a little bit of JavaScript by polling a small Pode web service running in my home lab.</p>", "image": "https://www.joshooaj.com/assets/images/social/blog/posts/2024-05-03-Pode-Now-Playing/index.png", "date_published": "2024-05-12T00:00:00+00:00", "authors": [{"name": "Josh Hendricks"}], "tags": ["Homelab", "MkDocs", "PowerShell"]}, {"id": "https://www.joshooaj.com/blog/2024/03/25/but-i-am-the-administrator/", "url": "https://www.joshooaj.com/blog/2024/03/25/but-i-am-the-administrator/", "title": "But I AM the administrator", "content_html": "<h1>But I AM the administrator</h1>\n<p>A while back I was helping a co-worker with a project where the customer needed\nto automate a lot of minor Windows configuration steps on some Windows IoT\nserver appliances. One of the tasks was to make it possible to disable Windows\nFirewall, because even an administrator was greeted with the message \"For your\nsecurity, some settings are managed by your system administrator\" and the option\nto change firewall settings was disabled.</p>", "image": "https://www.joshooaj.com/assets/images/social/blog/posts/2024-03-25-SetFirewallGpo/index.png", "date_published": "2024-03-25T00:00:00+00:00", "authors": [{"name": "Josh Hendricks"}], "tags": ["PowerShell", "Windows"]}, {"id": "https://www.joshooaj.com/blog/2024/03/24/image-comparison/", "url": "https://www.joshooaj.com/blog/2024/03/24/image-comparison/", "title": "Image Comparison", "content_html": "<h1>Image Comparison</h1>\n<p><img alt=\"Coastline Bluff\" src=\"hero.jpg\"></p>\n<p>I recently came across a couple of blog posts on image comparison\nalgorithms shared by Dr. Neal Krawetz. One of them, titled \"<a href=\"https://www.hackerfactor.com/blog/index.php?/archives/529-Kind-of-Like-That.html\">Kind Of Like That</a>\",\ndescribes the \"dHash\" algorithm which generates a perceptual hash based on\ngradients in the image. With more than 200k family photos to wrangle, I wrote up\na PowerShell implementation to find similar images and it works surprisingly well!</p>", "image": "https://www.joshooaj.com/assets/images/social/blog/posts/2024-03-23-Image-Comparison/index.png", "date_published": "2024-03-24T00:00:00+00:00", "authors": [{"name": "Josh Hendricks"}], "tags": ["Computer Vision", "PowerShell"]}, {"id": "https://www.joshooaj.com/blog/2024/03/21/new-pspushover-powershell-module/", "url": "https://www.joshooaj.com/blog/2024/03/21/new-pspushover-powershell-module/", "title": "New PSPushover PowerShell Module", "content_html": "<h1>New PSPushover PowerShell Module</h1>\n<p>Back in 2021 I wrote a module called <a href=\"https://github.com/joshooaj/Poshover\">Poshover</a>\nfor sending push notifications with <a href=\"https://pushover.net\">Pushover.net</a>. This\nweek I decided to use that module as a reference during my PowerShell + DevOps Summit\nworkshop in a few weeks. I never liked the name, so I renamed it to <a href=\"https://www.joshooaj.com/PSPushover/\">PSPushover</a>\nand set it up in a new repository.</p>", "image": "https://www.joshooaj.com/assets/images/social/blog/posts/2024-03-21-PSPushover/PSPushover.png", "date_published": "2024-03-21T00:00:00+00:00", "authors": [{"name": "Josh Hendricks"}], "tags": ["CI/CD", "Documentation", "GitHub Actions", "PowerShell"]}, {"id": "https://www.joshooaj.com/blog/2023/10/12/parse-code-from-markdown-files/", "url": "https://www.joshooaj.com/blog/2023/10/12/parse-code-from-markdown-files/", "title": "Parse Code from Markdown Files", "content_html": "<h1>Parse Code from Markdown Files</h1>\n<p><img alt=\"Screenshot of Pester test output highlighting the use of aliases within markdown documentation code blocks\" src=\"test-md-codeblocks.hero.png\"></p>\n<h2>Introduction</h2>\n<p>Are you testing your documentation? If you write PowerShell scripts or modules, you are <em>hopefully</em> using Pester to\ntest your code. And if you use PlatyPS to generate markdown documentation like I do, then you have a bunch of example\nPowerShell code sitting in .md files. But what happens if you rename a command, a parameter, or make a breaking change?</p>", "image": "https://www.joshooaj.com/assets/images/social/blog/posts/Parse-Code-from-Markdown/2023-10-12_parse-code-from-markdown.png", "date_published": "2023-10-12T00:00:00+00:00", "authors": [{"name": "Josh Hendricks"}], "tags": ["Markdown", "PowerShell"]}, {"id": "https://www.joshooaj.com/blog/2023/10/02/generate-markdown-tables-from-powershell/", "url": "https://www.joshooaj.com/blog/2023/10/02/generate-markdown-tables-from-powershell/", "title": "Generate markdown tables from PowerShell", "content_html": "<h1>Generate markdown tables from PowerShell</h1>\n<p>I had a need to generate a markdown table dynamically from PowerShell, so I wrote a flexible function which uses the\nproperties on the incoming objects to define the column names, supports the definition of maximum column widths, and\noutputs either pretty-printed markdown with padded values and aligned columns, or \"compressed\" markdown without the\nunnecessary padding included.</p>", "image": "https://www.joshooaj.com/assets/images/social/blog/posts/ConvertTo-MarkdownTable/ConvertTo-MarkdownTable.png", "date_published": "2023-10-02T00:00:00+00:00", "authors": [{"name": "Josh Hendricks"}], "tags": ["PowerShell"]}, {"id": "https://www.joshooaj.com/blog/2023/09/06/debugging-convertto-json/", "url": "https://www.joshooaj.com/blog/2023/09/06/debugging-convertto-json/", "title": "Debugging ConvertTo-Json", "content_html": "<h1>Debugging ConvertTo-Json</h1>\n<p><img alt=\"PowerShell terminal showing a duplicate key error when using ConvertTo-Json\" src=\"ConvertTo-Json-Error.png\"></p>\n<p>My co-worker, Jared, who regularly uses MilestonePSTools and builds tools with it brought me an interesting problem yesterday - an apparent compatibility issue between our SDK and the <code>#!powershell ConvertTo-Json</code> cmdlet from the built-in Microsoft.PowerShell.Utility module. If you've ever struggled with the error \"ConvertTo-Json : An item with the same key has already been added.\", follow along as I share our debugging process until we finally discovered the root cause. While the details in this post involve the Milestone SDK and the MilestonePSTools module, the root cause and the process of finding it is relevant to anyone using .NET assemblies or 3rd party modules with PowerShell.</p>", "image": "https://www.joshooaj.com/assets/images/social/blog/posts/2023-09-05_Debugging-ConvertTo-Json/index.png", "date_published": "2023-09-06T00:00:00+00:00", "authors": [{"name": "Josh Hendricks"}], "tags": ["PowerShell"]}, {"id": "https://www.joshooaj.com/blog/2022/12/21/argument-transformation-attributes/", "url": "https://www.joshooaj.com/blog/2022/12/21/argument-transformation-attributes/", "title": "Argument Transformation Attributes", "content_html": "<h1>Argument Transformation Attributes</h1>\n<h2>Introduction</h2>\n<p>Argument transformation attributes make it possible to offer your users\nsome flexibility in how they supply values for parameters. I've started to use\nthese in the <a href=\"https://www.milestonepstools.com\">MilestonePSTools</a> module to\nmake it possible to provide a name instead of a strongly typed object like a\n<code>#!powershell [RecordingServer]</code> or a <code>#!powershell [Role]</code>, while still making it clear in the\n<code>#!powershell Get-Help</code> documentation what the expected object type is, and without\npolluting functions with object transformation code.</p>", "image": "https://www.joshooaj.com/assets/images/social/blog/posts/ArgumentTransformation/ArgumentTransformation.png", "date_published": "2022-12-21T00:00:00+00:00", "authors": [{"name": "Josh Hendricks"}], "tags": ["PowerShell", "Usability"]}, {"id": "https://www.joshooaj.com/blog/2022/12/07/your-users-deserve-argument-completers/", "url": "https://www.joshooaj.com/blog/2022/12/07/your-users-deserve-argument-completers/", "title": "Your users deserve argument completers", "content_html": "<h1>Your users deserve argument completers</h1>\n<h2>Introduction</h2>\n<p>One of the things I love about PowerShell is the focus on usability and\ndiscoverability. The PowerShell team, and the community, have invested <em>so much</em>\ninto reducing friction and accelerating your workflow. Argument completers are\none of the tools available to you, and you should consider adding them to your\nprojects if you aren't doing so already.</p>", "image": "https://www.joshooaj.com/assets/images/social/blog/posts/ArgumentCompleters/ArgumentCompleters.png", "date_published": "2022-12-07T00:00:00+00:00", "authors": [{"name": "Josh Hendricks"}], "tags": ["PowerShell", "Usability"]}, {"id": "https://www.joshooaj.com/blog/2022/01/04/securely-reading-passwords-from-the-console/", "url": "https://www.joshooaj.com/blog/2022/01/04/securely-reading-passwords-from-the-console/", "title": "Securely Reading Passwords from the Console", "content_html": "<h1>Securely Reading Passwords from the Console</h1>\n<p>If you've ever written a console application which requires the user to enter sensitive information like a password or a token, you might have wrestled with concerns of exposing the password in plain text within the console window.</p>", "image": "https://www.joshooaj.com/assets/images/social/blog/posts/SecureConsole/2022-01-04_SecureConsole.png", "date_published": "2022-01-04T00:00:00+00:00", "authors": [{"name": "Josh Hendricks"}], "tags": ["C\\#"]}]}